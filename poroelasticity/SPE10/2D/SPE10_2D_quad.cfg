[pylithapp.metadata]
base = [SPE10_2D_quad.cfg]
description = Test of data from 2D slice of the SPE10 dataset
keywords = [SPE10]
arguments = [SPE10_2D_quad.cfg]
version = 1.0.0

features = [
    Static simulation,
    Multigrid preconditioner
    ]


[pylithapp]
dump_parameters.filename = output/SPE10_2D_quad-parameters.json
problem.progress_monitor.filename = output/SPE10_2D_quad-progress.txt

problem.defaults.name = SPE10_2D_quad

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
solution = 1
#petsc = 1
#meshio = 1
#isotropiclinearelasticity = 1
#dirichlettimedependent = 1
#faultcohesivekin = 1

[pylithapp.journal.debug]
#timedependent = 1
#solution = 1
#isotropiclinearelasticity = 1
#dirichlettimedependent = 1
#constraintspatialdb = 1
#faultcohesivekin = 1
#integratorinterface = 1
#kinsrcstep = 1
#outputphysics = 1
#outputsolndomain = 1


# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
defaults.quadrature_order = 2
solver = nonlinear 

solution = pylith.problems.SolnDispPresTracStrain

[pylithapp.timedependent]

start_time = 0.0*s
initial_dt = 0.0028666667*s
end_time = 0.0057333334*s
#initial_dt = 0.1*s
#end_time = 15*s

normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 1*m
normalizer.relaxation_time = 1.0*s
normalizer.shear_modulus = 1.0*m**-1*kg*s**-2

[pylithapp.problem]
solution_observers = [domain]

[pylithapp.problem.solution_observers.domain]
field_filter = pylith.meshio.FieldFilterProject
# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.reader]
filename = mesh/mesh_quad.exo
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem.solution.subfields.displacement]
basis_order = 2

[pylithapp.problem.solution.subfields.pressure]
basis_order = 1

[pylithapp.problem.solution.subfields.trace_strain]
basis_order = 1

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
# Create an array of one material
materials = [poroelastic]
materials.poroelastic = pylith.materials.Poroelasticity
defaults.output_field_filter = pylith.meshio.FieldFilterProject

[pylithapp.problem.materials.poroelastic]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.label = Properties for subducting slab
db_auxiliary_field.iohandler.filename = spatialdb/SPE10_parameters.spatialdb

# id must match the values in the mesh material-ids.
label = Poroelastic material
id = 1

observers.observer.field_filter = pylith.meshio.FieldFilterNone
observers.observer.data_fields = [displacement,pressure,trace_strain]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# Dirichlet Case
bc = [x_neg,x_pos,y_neg,y_pos]

bc.x_pos = pylith.bc.DirichletTimeDependent
bc.x_neg = pylith.bc.DirichletTimeDependent
bc.y_neg = pylith.bc.DirichletTimeDependent
bc.y_pos = pylith.bc.DirichletTimeDependent

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_pos]
constrained_dof = [0]
label = x_pos
field = pressure
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +x boundary

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_neg]
constrained_dof = [0]
label = x_neg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -x boundary

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.y_pos]
constrained_dof = [1]
label = y_pos
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +y boundary

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.y_neg]
constrained_dof = [1]
label = y_neg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -y boundary


# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
ic = [domain]
ic.domain = pylith.problems.InitialConditionDomain

[pylithapp.problem.ic.domain]
subfields = [displacement, pressure, trace_strain]
db = spatialdata.spatialdb.UniformDB
db.label = Initial conditions over domain
db.values = [displacement_x, displacement_y, pressure, trace_strain]
db.data = [0.0, 0.0, 0.0, 0.0]

# ------------------------------------------------------------------------------
# output
# ------------------------------------------------------------------------------



# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
malloc_dump = true

#dm_plex_print_fem = 2
#dm_plex_print_l2 = 2

# PC
pc_type = lu

# KSP
ksp_rtol = 1.0e-8
ksp_atol = 1.0e-12
ksp_max_it = 1000
ksp_gmres_restart = 200
ksp_error_if_not_converged = false
#ksp_monitor = true
#ksp_converged_reason = true

# SNES
snes_rtol = 1.0e-10
snes_atol = 1.0e-10
snes_error_if_not_converged = false
#snes_fd = true
snes_monitor = true
#snes_converged_reason = true
#snes_linesearch_monitor = true
#snes_test_jacobian = true
#snes_test_jacobian_view = true
# TS
ts_error_if_step_fails = true
ts_type = beuler
ts_monitor = true
#ts_view = true


# End of file
