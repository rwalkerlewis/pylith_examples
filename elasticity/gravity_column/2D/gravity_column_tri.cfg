[pylithapp]
dump_parameters.filename = output/gravity_column_quad-parameters.json
problem.progress_monitor.filename = output/gravity_column_quad-progress.txt
problem.defaults.name = gravity_column_quad

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress.
[pylithapp.journal.info]
timedependent = 1
solution = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.reader]
filename = mesh_tri.exo
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
# Use the nonlinear solver to verify residual and Jacobian are consistent.
solver = nonlinear

gravity_field = spatialdata.spatialdb.GravityField
gravity_field.acceleration = 9.80665*m/s**2
gravity_field.gravity_dir = [0.0, -1.0, 0.0]

[pylithapp.timedependent]
initial_dt = 100.0*s
#initial_dt = 0.001*s
start_time = 0.0*s
end_time = 1000.0*s
#end_time = 0.002*s
normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 1.0*m
normalizer.relaxation_time = 1.0*s
normalizer.shear_modulus = 1.0*m**-1*kg*s**-2


# Set the default quadrature order for all discretizations.
defaults.quadrature_order = 1

[pylithapp.problem.solution.subfields.displacement]
# Set the discretization and integration for each of the solution subfields.
#
# IMPORTANT: The quadrature order *must* the same for all solution and
# auxiliary subfields. PyLith will verify that this requirement is met.
# This requirement may be relaxed in the future.
basis_order = 1

[pylithapp.problem]
solution_observers = [domain]

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
# Create an array of one material
materials = [elastic]

# We use the default material (elasticity) and rheology
# (isotropic, linearly elastic).

[pylithapp.problem.materials.elastic]
# id must match the values in the mesh material-ids.
label = Elastic material
id = 1

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Elastic properties
db_auxiliary_field.values = [density, vs, vp]
db_auxiliary_field.data = [2500*kg/m**3, 3.0*km/s, 5.2915026*km/s]

# Set the discretization of the material auxiliary fields (properties).
# We have uniform material properties, so we can use a basis order of 0.
auxiliary_subfields.density.basis_order = 0
bulk_rheology.auxiliary_subfields.bulk_modulus.basis_order = 0
bulk_rheology.auxiliary_subfields.shear_modulus.basis_order = 0

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# We have three Dirichlet boundary conditions as described above.
bc = [x_neg, x_pos, y_neg]
bc.x_neg = pylith.bc.DirichletTimeDependent
bc.x_pos = pylith.bc.DirichletTimeDependent
bc.y_neg = pylith.bc.DirichletTimeDependent

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_pos]
constrained_dof = [0]
label = x_pos
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +x boundary

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_neg]
constrained_dof = [0]
label = x_neg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -x boundary

# ------------------------------------------------------------------------------

[pylithapp.problem.bc.y_neg]
constrained_dof = [1]
label = y_neg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -y boundary

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
malloc_dump = true

#dm_plex_print_fem = 2
#dm_plex_print_l2 = 2

# PC
pc_type = ilu

# KSP
ksp_rtol = 1.0e-8
ksp_atol = 1.0e-12
ksp_max_it = 1000
ksp_gmres_restart = 200
ksp_error_if_not_converged = false
#ksp_monitor = true
#ksp_converged_reason = true

# SNES
snes_rtol = 1.0e-10
snes_atol = 1.0e-10
snes_error_if_not_converged = false
snes_fd = false
#snes_monitor = true
#snes_converged_reason = true
#snes_linesearch_monitor = true

# TS
ts_error_if_step_fails = true
ts_type = beuler
ts_monitor = true
#ts_view = true

# End of file
