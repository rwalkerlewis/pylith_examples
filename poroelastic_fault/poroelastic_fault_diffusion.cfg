[pylithapp.metadata]
#base = [pylithapp.cfg]
description = Coseismic prescribed slip between the continental crust and the subducting oceanic crust.
authors = [Shengduo Liu, Robert Walker]
keywords = [prescribed slip, poroelastic fault]
arguments = [poroelastic_fault_diffusion.cfg]
version = 1.0.0
pylith_version = [>=3.0, <4.0]

features = [
    Static simulation,
    pylith.faults.FaultPoroDiffusionCohesiveKin,
    pylith.bc.DirichletTimeDependent,
    spatialdata.spatialdb.SimpleDB,
    pylith.faults.KinSrcStep,
    pylith.bc.ZeroDB
    ]
    
# ----------------------------------------------------------------------
# Monitoring and parameter viewing.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/poroelastic_fault_diffusion-parameters.json
problem.progress_monitor.filename = output/poroelastic_fault_diffusion-progress.txt

problem.defaults.name = poroelastic_fault_diffusion

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
timedependent = 1
solution = 1
petsc = 1
meshiocubit = 1
#isotropiclinearelasticity = 1
#dirichlettimedependent = 1
#faultcohesivekin = 1

[pylithapp.journal.debug]
#timedependent = 1
#solution = 1
#isotropiclinearelasticity = 1
#dirichlettimedependent = 1
#constraintspatialdb = 1
#faultcohesivekin = 1
#integratorinterface = 1
#kinsrcstep = 1
#outputphysics = 1
#outputsolndomain = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
reader = pylith.meshio.MeshIOCubit

[pylithapp.mesh_generator.reader]
filename = mesh_quad1.exo
coordsys.space_dim = 2

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem]
defaults.quadrature_order = 2
# Use nonlinear solver to ensure residual and Jacobian are consistent.
solver = nonlinear 
#solution = pylith.problems.SolnDispPresTracStrain

# For a quastistatic simulation with a fault, we have two solution fields:
# (1) displacement and (2) Lagrange multiplier. We use a predefined containter
# to create a solution field with these two subfields.
solution = pylith.problems.SolnDispPresTracStrainLagrange

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem.solution.subfields]
displacement.basis_order = 2
lagrange_fault.basis_order = 1
pressure.basis_order = 1
fault_pressure.basis_order = 1
trace_strain.basis_order = 1

[pylithapp.timedependent]
initial_dt = 0.5*s
start_time = 0.0*s
end_time = 110.0*s

normalizer = spatialdata.units.NondimElasticQuasistatic
normalizer.length_scale = 1.0*m
normalizer.relaxation_time = 1.0*s
normalizer.shear_modulus = 1.0*m**-1*kg*s**-2

[pylithapp.problem]
solution_observers = [domain]

[pylithapp.problem.solution_observers.domain]

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
# Create an array of one material
materials = [poroelastic_xneg, poroelastic_fault, poroelastic_xpos]
materials.poroelastic_xneg = pylith.materials.Poroelasticity
materials.poroelastic_fault = pylith.materials.Poroelasticity
materials.poroelastic_xpos = pylith.materials.Poroelasticity

# defaults.output_field_filter = pylith.meshio.FieldFilterProject

[pylithapp.problem.materials.poroelastic_xneg]
# id must match the values in the mesh material-ids.
label = Poroelastic xneg
id = 1

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,        1.0*Pa*s,      0.1,        3.0*Pa,               4.0*Pa,              0.6,             8.0*Pa,            10.0*Pa,               1.5*m**2]
#observers.observer.field_filter.basis_order = 1

#observers.observer.field_filter = pylith.meshio.FieldFilterNone
observers.observer.data_fields = [displacement, pressure, trace_strain]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic_xneg.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

[pylithapp.problem.materials.poroelastic_fault]
# id must match the values in the mesh material-ids.
label = Poroelastic fault
id = 2

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,        1.0*Pa*s,      0.1,        3.0*Pa,               4.0*Pa,              0.6,             8.0*Pa,            10.0*Pa,              1.5*m**2]
#observers.observer.field_filter.basis_order = 1

# observers.observer.field_filter = pylith.meshio.FieldFilterNone
observers.observer.data_fields = [displacement, pressure, trace_strain]
# observers.observer.data_fields = [displacement,pressure]
auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic_fault.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

[pylithapp.problem.materials.poroelastic_xpos]
# id must match the values in the mesh material-ids.
label = Poroelastic xpos
id = 3

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Poroelastic properties
db_auxiliary_field.values = [solid_density, fluid_density, fluid_viscosity, porosity, shear_modulus, drained_bulk_modulus, biot_coefficient, fluid_bulk_modulus, solid_bulk_modulus, isotropic_permeability]
db_auxiliary_field.data   = [ 2500*kg/m**3,  1000*kg/m**3,        1.0*Pa*s,      0.1,        3.0*Pa,               4.0*Pa,              0.6,             8.0*Pa,            10.0*Pa,               1.5*m**2]
# observers.observer.field_filter.basis_order = 1

# observers.observer.field_filter = pylith.meshio.FieldFilterNone
observers.observer.data_fields = [displacement, pressure, trace_strain]

auxiliary_subfields.body_force.basis_order = 0
auxiliary_subfields.solid_density.basis_order = 0
auxiliary_subfields.fluid_density.basis_order = 0
auxiliary_subfields.fluid_viscosity.basis_order = 0
auxiliary_subfields.gravitational_acceleration.basis_order = 0
auxiliary_subfields.porosity.basis_order = 0
derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

[pylithapp.problem.materials.poroelastic_xpos.bulk_rheology]

auxiliary_subfields.drained_bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.biot_coefficient.basis_order = 0
auxiliary_subfields.biot_modulus.basis_order = 0
auxiliary_subfields.isotropic_permeability.basis_order = 0

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [fault]
interfaces.fault = pylith.faults.FaultPoroDiffusionCohesiveKin

[pylithapp.problem.interfaces.fault]
# The label corresponds to the nodeset we created in CUBIT/Trelis for the fault.
label = fault_xpos

# We will use uniform material properties, so we use the UniformDB
# spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Poroelastic fault properties
db_auxiliary_field.values = [thickness, porosity, beta_p, beta_sigma, permeability_tangential, permeability_normal, fluid_viscosity, bulk_modulus_negative, bulk_modulus_positive, shear_modulus_negative, shear_modulus_positive, source]
db_auxiliary_field.data   = [ 0.002*m,  0.068,    1.0*Pa**-1,      1.0*Pa**-1,        0.001*m**2,            0.01*m**2,          1.0*Pa*s,             4.0*Pa,            4.0*Pa,              3.0*Pa,               3.0*Pa,                0.1*s**-1]
# observers.observer.field_filter.basis_order = 1
#observers.observer.data_fields = [slip, lagrange_fault]
observers.observer.data_fields = [slip, lagrange_multiplier_fault, fault_pressure]
#auxiliary_subfields.body_force.basis_order = 0

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
# We specify slip as a function of depth, so we use a SimpleDB with
# linear interpolation.
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.label = Fault rupture auxiliary field spatial database
db_auxiliary_field.iohandler.filename = fault_coseismic2.spatialdb
db_auxiliary_field.query_type = linear


# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
#bc = [x_neg,x_pos, xp_neg, yp_neg]
bc = [x_neg, x_pos, xp_neg, xp_pos]

bc.x_pos = pylith.bc.DirichletTimeDependent
bc.x_neg = pylith.bc.DirichletTimeDependent
bc.xp_neg = pylith.bc.DirichletTimeDependent
bc.xp_pos = pylith.bc.DirichletTimeDependent
# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_neg]

constrained_dof = [0]
label = face_xneg
field = pressure

db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on +x boundary
db_auxiliary_field.values = [initial_amplitude]
db_auxiliary_field.data = [+1.0*Pa]


# ------------------------------------------------------------------------------
[pylithapp.problem.bc.x_pos]
constrained_dof = [0]
label = face_xpos
field = pressure
#db_auxiliary_field = pylith.bc.ZeroDB
#db_auxiliary_field.label = Dirichlet BC on +x boundary
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Dirichlet BC on +x boundary
db_auxiliary_field.values = [initial_amplitude]
db_auxiliary_field.data = [-1.0*Pa]


# ------------------------------------------------------------------------------
[pylithapp.problem.bc.xp_neg]
constrained_dof = [0, 1]
label = face_xneg
#label = point_xyneg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC at -x face

# ------------------------------------------------------------------------------
[pylithapp.problem.bc.xp_pos]
constrained_dof = [0, 1]
label = face_xpos
#label = point_xyneg
field = displacement
db_auxiliary_field = spatialdata.spatialdb.UniformDB 
db_auxiliary_field.label = Dirichlet BC at +x face
db_auxiliary_field.values = [initial_amplitude_x, initial_amplitude_y]
db_auxiliary_field.data = [0.0*m, 0.0*m]

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
[pylithapp.petsc]
malloc_dump = true

#dm_plex_print_fem = 2
#dm_plex_print_l2 = 2

# PC
pc_type = ilu

# KSP
ksp_rtol = 1.0e-8
ksp_atol = 1.0e-12
ksp_max_it = 1000
ksp_gmres_restart = 200
ksp_error_if_not_converged = false
#ksp_monitor = true
#ksp_converged_reason = true

# SNES
snes_rtol = 1.0e-10
snes_atol = 1.0e-10
snes_error_if_not_converged = false
snes_fd = false
snes_monitor = true
#snes_converged_reason = true
#snes_linesearch_monitor = true

# TS
ts_error_if_step_fails = true
ts_type = beuler
ts_monitor = true
#ts_view = true

# End of file
